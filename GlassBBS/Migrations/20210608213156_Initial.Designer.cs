// <auto-generated />
using GlassBBS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GlassBBS.Migrations
{
    [DbContext(typeof(GlassBBSContext))]
    [Migration("20210608213156_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GlassBBS.Models.Board", b =>
                {
                    b.Property<string>("BoardId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BoardId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            BoardId = "00da967a-652d-4c9d-b9ef-f1bea2111d1d",
                            Description = "Information regarding various residency opportunities.",
                            Name = "Residencies"
                        },
                        new
                        {
                            BoardId = "227c89ae-57c0-4c71-ae95-8c8be11d511d",
                            Description = "A selection of educational workshop offerings.",
                            Name = "Workshops"
                        },
                        new
                        {
                            BoardId = "2d993c3d-72d7-491f-97dc-3c38cfbcbb8e",
                            Description = "A list of institutions offering higher-ed degrees in the field.",
                            Name = "Education"
                        },
                        new
                        {
                            BoardId = "9dd9f397-76d8-41d6-8232-9fe67a09add2",
                            Description = "Scholarship info for workshops and universities.",
                            Name = "Scholarships"
                        },
                        new
                        {
                            BoardId = "e08c3b28-bcfa-4040-97fc-7acdf10328c7",
                            Description = "View selected works/exhibitions by various artists",
                            Name = "Exhibitions"
                        },
                        new
                        {
                            BoardId = "68fb0ed7-d268-438c-859c-0f83cfe99dc4",
                            Description = "Find relevant job info within the field.",
                            Name = "Jobs"
                        });
                });

            modelBuilder.Entity("GlassBBS.Models.BoardUser", b =>
                {
                    b.Property<string>("BoardUserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BoardUserId");

                    b.ToTable("BoardUsers");

                    b.HasData(
                        new
                        {
                            BoardUserId = "19854889-dc5b-4edc-8ee9-41144a724dff",
                            Name = "Max"
                        },
                        new
                        {
                            BoardUserId = "d3845ecc-261f-423b-a076-524adcd23482",
                            Name = "Tom"
                        });
                });

            modelBuilder.Entity("GlassBBS.Models.Post", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("BoardId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Body")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostAuthorId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PostId");

                    b.HasIndex("BoardId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("GlassBBS.Models.Reply", b =>
                {
                    b.Property<string>("ReplyId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Body")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ReplyAuthorId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ReplyId");

                    b.HasIndex("PostId");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("GlassBBS.Models.Post", b =>
                {
                    b.HasOne("GlassBBS.Models.Board", null)
                        .WithMany("Posts")
                        .HasForeignKey("BoardId");
                });

            modelBuilder.Entity("GlassBBS.Models.Reply", b =>
                {
                    b.HasOne("GlassBBS.Models.Post", null)
                        .WithMany("Replies")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("GlassBBS.Models.Board", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("GlassBBS.Models.Post", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
